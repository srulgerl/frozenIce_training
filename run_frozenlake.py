import numpy as np
import gymnasium as gym
import time
from gymnasium.envs.toy_text.frozen_lake import generate_random_map

# 1. –ü–∞—Ä–∞–º–µ—Ç—Ä“Ø“Ø–¥ (train-—Ç—ç–π –∏–∂–∏–ª –±–∞–π—Ö —ë—Å—Ç–æ–π, —É—á–∏—Ä –Ω—å –∏–∂–∏–ª map-—ã–≥ –∞—à–∏–≥–ª–∞–Ω–∞)
MAP_SIZE = 7
HOLE_PROB = 0.8
SEED = 42  # Train —Ö–∏–π—Å—ç–Ω map-—Ç–∞–π –∏–∂–∏–ª map “Ø“Ø—Å–≥—ç—Ö–∏–π–Ω —Ç—É–ª–¥ –∏–∂–∏–ª seed –∞—à–∏–≥–ª–∞–Ω–∞


def play_with_policy(env, policy, delay=0.5):
    """–•–∞–º–≥–∏–π–Ω —Å–∞–π–Ω –±–æ–¥–ª–æ–≥–æ–æ—Ä —Ç–æ–≥–ª–æ—Ö —Ñ—É–Ω–∫—Ü."""
    state, _ = env.reset()
    env.render()

    print("\n–¢–æ–≥–ª–æ–æ–º —ç—Ö—ç–ª–ª—ç—ç. Enter –¥–∞—Ä–∂ —ç—Ö–ª“Ø“Ø–ª–Ω—ç “Ø“Ø...")

    for step in range(100):
        action = policy[state]
        print(f"–ê–ª—Ö–∞–º {step+1}: –¢”©–ª”©–≤ = {state}, “Æ–π–ª–¥—ç–ª = {action}")
        state, reward, terminated, truncated, _ = env.step(action)
        time.sleep(delay)
        env.render()

        if terminated or truncated:
            if reward == 1:
                print("üéâ –ê–º–∂–∏–ª—Ç—Ç–∞–π –∑–æ—Ä–∏–ª–≥–æ–¥ —Ö“Ø—Ä–ª—ç—ç!")
            else:
                print("üí• –£–Ω–∞—Å–∞–Ω...")
            break
    else:  # 100 –∞–ª—Ö–∞–º–¥ –∑–æ—Ä–∏–ª–≥–æ–¥ —Ö“Ø—Ä—ç—ç–≥“Ø–π –±–æ–ª
        print("üí° 100 –∞–ª—Ö–∞–º–¥ –∑–æ—Ä–∏–ª–≥–æ–¥ —Ö“Ø—Ä—á —á–∞–¥—Å–∞–Ω–≥“Ø–π.")


if __name__ == "__main__":
    # –°–∞–Ω–∞–º—Å–∞—Ä–≥“Ø–π FrozenLake map “Ø“Ø—Å–≥—ç—Ö (train_frozenlake_qlearning.py-—Ç—ç–π –∏–∂–∏–ª –ø–∞—Ä–∞–º–µ—Ç—Ä—ç—ç—Ä)
    # –ó”®–í–•”®–ù –≠–ù–≠ MAP-–´–ì TRAIN –•–ò–ô–°–≠–ù –ë–û–î–õ–û–ì–û–¢–û–ô –ê–ñ–ò–õ–õ–ê–ù–ê!
    random_map = generate_random_map(size=MAP_SIZE, p=HOLE_PROB, seed=SEED)

    print(f"–¢–æ–≥–ª–æ—Ö map: {random_map}")  # –¢–æ–≥–ª–æ—Ö map-—ã–≥ —Ö–∞—Ä—É—É–ª–Ω–∞

    # 2. Policy-–≥ —Ñ–∞–π–ª–Ω–∞–∞—Å —É–Ω—à–∏—Ö
    try:
        best_policy = np.load("best_policy.npy")
        print("best_policy.npy —Ñ–∞–π–ª—ã–≥ –∞–º–∂–∏–ª—Ç—Ç–∞–π —É–Ω—à–ª–∞–∞.")
    except FileNotFoundError:
        print("–ê–ª–¥–∞–∞: best_policy.npy —Ñ–∞–π–ª –æ–ª–¥—Å–æ–Ω–≥“Ø–π.")
        print(
            "–≠—Ö–ª—ç—ç–¥ 'train_frozenlake_qlearning.py' —Å–∫—Ä–∏–ø—Ç–∏–π–≥ –∞–∂–∏–ª–ª—É—É–ª–∂ –±–æ–¥–ª–æ–≥–æ —Å—É—Ä–≥–∞–Ω–∞ —É—É."
        )
        exit()  # –•—ç—Ä—ç–≤ —Ñ–∞–π–ª –±–∞–π—Ö–≥“Ø–π –±–æ–ª –ø—Ä–æ–≥—Ä–∞–º—ã–≥ –∑–æ–≥—Å–æ–æ–Ω–æ.

    # 3. –û—Ä—á–∏–Ω (render_mode="human" –Ω—å —Ç–æ–≥–ª–æ–æ–º—ã–≥ —Ö–∞—Ä—É—É–ª–∞—Ö –≥–æ—Ä–∏–º)
    env = gym.make(
        "FrozenLake-v1", desc=random_map, is_slippery=False, render_mode="human"
    )

    play_with_policy(env, best_policy)

    env.close()  # –û—Ä—á–∏–Ω–≥ —Ö–∞–∞—Ö
